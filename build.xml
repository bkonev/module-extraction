<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="module-extraction">
  <property name="src.dir" value="src" />
  <property name="build.dir" value="build" />

  <!-- Where eclipse stores the classes, to clean before running from command line -->
  <property name="eclipse.build" value="bin" />
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jar.dir"     value="${build.dir}/jar"/>
  <property name="main-class"  value="uk.ac.liv.moduleextraction.main.CommandLineInterface"/>

  <!-- Jar dependencies -->
  <property environment="env"/> 
  <property name="externaljar.dir" value="${env.JAR_LOCATION}" />
  <property name="owlapi-jar" value="owlapi-bin.jar" />
  <property name="sat4j-jar" value="org.sat4j.core.jar" />

  <taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" classpath="/home/william/ant/task.jar" onerror="report" />
  <property name="one-jar.dist.dir" value="/home/william/ant/"/>
  <import file="/home/william/ant/one-jar-ant-task.xml" optional="true" /> 	

  <!--
      Only have propositional as a dependency as the propositional 
      project includes the ontologytils classes which is also
      a dependency.
      -->
    <property name="propositional.dir"  value="../propositional"/>

    <target name="clean">
      <delete dir="${eclipse.build}"/>
      <delete dir="${build.dir}"/>
    </target>


    <target name="exists-owlapi-jar">
      <available file="${externaljar.dir}/${owlapi-jar}" property="owlapi-found"/>
      <echo>${owlapi-found}</echo>
    </target>

    <target name="exists-sat4j-jar">
      <available file="${externaljar.dir}/${sat4j-jar}" property="sat4j-found"/>
      <echo>${sat4j-found}</echo>
    </target>

    <target name="exists-owlapi-jar2">
      <available file="/home/william/ant/one-jar-ant-task.xml" property="owlapi2-found"/>
      <echo>${owlapi2-found}</echo>
    </target>

    <target name="find-jars" depends="exists-owlapi-jar, exists-sat4j-jar, exists-owlapi-jar2">
      <fail unless="${owlapi-found}" message="${owlapi-jar} missing from path, please check JAR_LOCATION env variable" />
      <echo>Located ${owlapi-jar}</echo>
      <fail unless="${sat4j-found}" message="${sat4j-jar} missing from path, please check JAR_LOCATION env variable" />
      <echo>Located ${sat4j-jar}</echo>
      <!-- Move jars to build directory -->
      <mkdir dir="${build.dir}/lib" />
      <copy todir="${build.dir}/lib">
        <fileset dir="${externaljar.dir}" includes="${owlapi-jar},${sat4j-jar}"/>
      </copy>
    </target>


    <target name="propositional">
      <echo>Building propositional dependency at ${propositional.dir}</echo>
      <ant dir="${propositional.dir}" target="compile" />
      <echo>Propositional Built</echo>
      <copy todir="${classes.dir}">
        <fileset dir="${propositional.dir}/${classes.dir}"/>
      </copy>
      <echo>Propositional classes copied over</echo>
    </target>

    <!-- Build classpath -->
    <path id="moduleextraction.classpath">
      <pathelement location="${classes.dir}"/>
      <pathelement location="${build.dir}/lib/${owlapi-jar}"/> 
      <pathelement location="${build.dir}/lib/${sat4j-jar}"/> 
    </path>	

    <target name="compile" depends="find-jars,propositional">
      <mkdir dir="${classes.dir}"/>
      <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="moduleextraction.classpath"/>
    </target>

    <target name="build" depends="clean,compile" >
    	<echo>Project Built</echo>
	</target>

	<!-- Using one-jar builds stand alone jar for distribution-->
    <target name="standalone-jar" depends="build">
      <one-jar destfile="${jar.dir}/${ant.project.name}-standalone.jar">
        <manifest>
          <attribute name="One-Jar-Main-Class" value="${main-class}"/>
        </manifest>
        <main>
          <fileset dir="${classes.dir}"/>
        </main>
        <lib>
          <fileset dir="${build.dir}/lib" />
        </lib>
      </one-jar>
    </target>

	<!-- Builds jar with external dependencies -->
    <target name="normal-jar" depends="build">
      <mkdir dir="${jar.dir}"/>		  
      <manifestclasspath property="jar.classpath" jarfile="${jar.dir}/${ant.project.name}.jar">
        <classpath refid="moduleextraction.classpath" />
      </manifestclasspath>
      <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
        <manifest>
          <attribute name="Main-Class" value="${main-class}"/>
          <attribute name="Class-Path" value="${jar.classpath}"/>
        </manifest>
      </jar>
    </target>
	
	<target name="jar" depends="build,normal-jar,standalone-jar">
		<echo>Jars Built</echo>
	</target>
  </project>
